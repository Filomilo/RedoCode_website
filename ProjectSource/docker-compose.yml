version: '3'
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
  docker_net:
    driver: bridge

services:
  frontend:
    build: 
      context: ./RedoCode_frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 1G
    depends_on:
      api:
        condition: service_healthy
    networks:
      - frontend
    hostname: frontend
  api:
    build: 
      context: ./RedoCode_backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 4G
    environment:
      DATABASE_HOST: db:5432
      CONTAINER_MANGER: docker
      DOCKER_HOST: tcp://dockerrunner:2376
    healthcheck:
      test: "curl --fail --silent http://localhost:8080/hello | grep hello || exit 1"
      interval: 40s
      timeout: 10s
      retries: 10
      start_period: 180s
    depends_on:
      db:
        condition: service_healthy
      dockerrunner:
        condition: service_healthy
    restart: unless-stopped
    hostname: api
    networks:
      - frontend
      - backend
      - docker_net
    # volumes:
    #   - ./RedoCode_backend:/backend/
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"  
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: RedoCode-database
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -U admin -d RedoCode-database" ]
      interval: 30s
      timeout: 60s
      retries: 10
      start_period: 80s  
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 4G
    networks:
      - backend
    hostname: db
    
  dockerrunner:
    platform: linux/amd64
    container_name: dockerrunner
    build: ./DockerRunner
    networks:
      - docker_net
    ports:
      - "2376:2376"
    privileged: true
    entrypoint:
    environment:
      - DOCKER_HOST=tcp://localhost:2376
    healthcheck:
      test: ["CMD-SHELL","docker","image","inspect","hello-world", ">/dev/null 2>&1;"]
      interval: 15s
      timeout: 15s
      retries: 8
      start_period: 30s
    restart: unless-stopped
